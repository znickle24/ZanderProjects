Impostor syndrome
From Wikipedia, the free encyclopedia
Not to be confused with Capgras delusion, in which a person believes that a loved one has been replaced by an impostor.
Impostor syndrome (also known as impostor phenomenon, fraud syndrome or the impostor experience) is a concept describing individuals who are marked by an inability to internalize their accomplishments and have a persistent fear of being exposed as a "fraud". The term was coined in 1978 by clinical psychologists Pauline R. Clance and Suzanne A. Imes.[1] Despite external evidence of their competence, those exhibiting the syndrome remain convinced that they are frauds and do not deserve the success they have achieved. Proof of success is dismissed as luck, timing, or as a result of deceiving others into thinking they are more intelligent and competent than they really are. While early research focused on the prevalence among high-achieving women,[1] impostor syndrome has been found to affect both men and women, in roughly equal numbers.[2][3]

Contents  [hide]
1	Background
2	Signs and symptoms
3	Occurrence
3.1	Prevalence
3.2	Demographics
3.3	High achievers
3.4	Ethnicity
4	Benefits
5	Management
5.1	Therapy
6	See also
7	References
8	Further reading
Background[edit]
The impostor syndrome tends to be studied as a reaction to certain stimuli and events. It is not perceived to be a mental disorder, but it has been the topic of research for many psychologists. Though traditionally perceived as an ingrained personality trait, impostor syndrome has more recently been studied as a reaction to certain situations. Under this interpretation, it is a response experienced by many different people to situations that prompt such feelings. Though certain people are more prone to impostor feelings, experience them more intensely than most, and can be identified through the use of personality scales, evidence does not support impostor syndrome to be a distinct personality trait.[4]

The term "impostor syndrome" first appeared in an article written by Pauline R. Clance and Suzanne A. Imes who observed many high-achieving women tended to believe they were not intelligent, and that they were over-evaluated by others.[1] Another framework for understanding impostor syndrome is to rename it "impostor experience". In the words of Clance, "If I could do it all over again, I would call it the impostor experience, because it's not a syndrome or a complex or a mental illness, it's something almost everyone experiences."[5] Reframing the vocabulary shifts one's perspective to help them understand they are not isolated in this experience.

Signs and symptoms[edit]
Impostor experience can take form differently for everyone. Some common signs that someone may be feeling like an impostor are:[6]

Perfectionism
Overworking
Undermining one's own achievements
Fear of failure
Discounting praise
Impostor experience can present itself through thoughts such as:[7]

"I must not fail"
"I feel like a fake"
"I just got lucky"
Impostor experience may be accompanied by anxiety, stress, or depression.[1]

Occurrence[edit]
Prevalence[edit]
Psychological research done in the early 1980s estimated that two out of five successful people consider themselves frauds and other studies have found that 70 percent of all people feel like impostors at one time or another. It is not considered a psychological disorder, and is not among the conditions described in the Diagnostic and Statistical Manual of Mental Disorders (commonly known as the DSM). The term was coined by clinical psychologists Pauline Clance and Suzanne Imes in 1978.[1]

People who have reportedly experienced the syndrome include multiple-award-winning writer Maya Angelou,[8] Academy Award-winning actor Tom Hanks,[9] actress Michelle Pfeiffer,[10] screenwriter Chuck Lorre,[11] best-selling writer Neil Gaiman,[12][13] best-selling writer John Green, comedian Tommy Cooper,[14] business leader Sheryl Sandberg, US Supreme Court justice Sonia Sotomayor,[15] actress Emma Watson,[16] and entrepreneur Mike Cannon-Brookes.[17]

70% of people will experience at least one episode of this impostor phenomenon in their lives.[18]
Impostor syndrome is not a gendered experience.[2][19]
Demographics[edit]
The impostor syndrome is particularly common among high-achievers. Another demographic group that often suffers from this phenomenon is African Americans. Being the beneficiary of affirmative action may cause a person who belongs to a visible minority to doubt their own abilities and suspect that their skills were not what allowed them to be hired.[20] Impostor syndrome has been commonly reported by graduate students and scientists beginning tenure track positions.[21]

High achievers[edit]
Imes and Clance's theory suggests several behaviours of high-achieving women with impostor syndrome:[1]

Diligence
Gifted people often work hard in order to prevent people from discovering that they are "impostors". This hard work often leads to more praise and success, which perpetuates the impostor feelings and fears of being "found out". The "impostor" person may feel they need to work two or three times as hard, so over-prepare, tinker and obsess over details, says Young. This can lead to burn-out and sleep deprivation.
Feeling of being phony
Those with impostor feelings often attempt to give supervisors and professors the answers that they believe they want, which often leads to an increase in feeling like they are "being a fake". If shown evidence of their competence or that they may suffer from a case of impostor syndrome, they tend to doubt themselves even more.
Use of charm
Connected to this, gifted women often use their intuitive perceptiveness and charm[1] to gain approval and praise from supervisors and seek out relationships with supervisors in order to help them increase their abilities intellectually and creatively. However, when the supervisor gives them praise or recognition, they feel that this praise is based on charm and not on ability. This may also be interpreted as manipulating others for personal gain.
Avoiding display of confidence
Another way that a person can perpetuate their impostor feelings is to avoid showing any confidence in their abilities. A person dealing with impostor feelings may believe that if they actually believe in their intelligence and abilities they may be rejected by others. Therefore, they may convince themselves that they are not intelligent or do not deserve success to avoid this.
While studies primarily focused on women, recent studies have suggested that men may also be prone to impostor syndrome on similar levels.[3][5] Clance, who coined the term while studying women, suggested that the syndrome may be equally prevalent in males, although she proposed that men process and act on it in different ways to women.[2]

Ethnicity[edit]
A study by Queena Hoang suggested as example people of color may experience impostor syndrome as a result of suspecting they were given their position by affirmative action.[22] The research regarding impostor experience has traditionally highlighted groups who are excelling in areas that were not always readily accessible to them.[1] Likewise, said students have not always had access to institutions of higher education, which is another source that can create feelings of being an impostor.[23]

In 2013, a study conducted at the University of Texas at Austin revealed that Asian-American students are more likely than African-American or Latino students to experience feelings of being an impostor in college. This is potentially dangerous because correlational analyses showed that impostor feelings amongst underrepresented college students was a strong predictor of mental health issues.[24] It may be hard to outwardly identify these students because students who express feeling symptoms of impostor syndrome are "often the most energetic, bright, and hardworking students amongst their peers".[22]

Benefits[edit]
Some scholars have argued that feelings of impostor experience are potentially healthy and beneficial for career trajectory. This belief stems from understanding that everyone has a comfort zone, and personal/professional growth is likely to occur when one steps out of their comfort zone.[25]

Management[edit]
Impostor syndrome is not a formal mental disorder and does not have a standard definition, therefore there has not been a clear consensus as to treatment options available.[26] The syndrome has affected approximately 70% of the population worldwide;[27] however, it often goes unrecognized.[28] If it is not addressed, victims can develop anxiety, stress, low self-confidence, depression, shame and self-doubt.[26][29][30][31][32] People who suffer from impostor syndrome tend to reflect and dwell upon extreme failure, mistakes and negative feedback from others. If not addressed, impostor syndrome can limit exploration and the courage to delve into new experiences, in fear of exposing failure.[28][33]

A number of management options are available to ease impostor syndrome. The most prominent is to discuss the topic with other individuals early on in the career path.[28][22] Mentors can discuss experiences where impostor syndrome was prevalent.[28][30] Most people who experience impostor syndrome are unaware that others feel inadequate as well. Once the situation is addressed, victims no longer feel alone in their negative experience. It is also noted that reflecting upon impostor feelings is key to overcoming this burden.[34] Making a list of accomplishments, positive feedback and success stories will also aid to manage impostor syndrome.[22] Finally, developing a strong support system that provides feedback on performance and has discussions about impostor syndrome on a regular basis is imperative for those experiencing impostorship.[30][33]

Therapy[edit]
Impostor experience can be addressed with many kinds of psychotherapy.[35][36][37] Group psychotherapy is an especially common and effective way of alleviating the impostor experience.[38][39]

Writing therapy allows the person to organize their thoughts in writing.[40] The written record of the person's objective accomplishments can enable the person to associate those accomplishments with reality, rather than simply dismissing the accomplishments internally. The written record can also remind the person of those accomplishments later. By these methods, writing therapy may alleviate the person's sense of inadequacy.[41]

See also[edit]
	Psychology portal
Dunning–Kruger effect – a cognitive bias wherein people of low ability suffer from illusory superiority
Explanatory style – how people typically explain events to themselves
Illusory superiority – a cognitive bias whereby a person overestimates their own qualities and abilities
Inner critic
"Fakin' It (Simon & Garfunkel song)" – 60s-era pop/rock song on the subject
Jonah complex – the fear of success which prevents the realisation of one's potential
Poseur
Self-handicapping
Setting up to fail § Setting oneself up to fail
Tall poppy syndrome – aspects of a culture where people of high status are resented for having been viewed as superior to their peers
References[edit]
^ Jump up to: a b c d e f g h Clance, Pauline Rose; Imes, Suzanne Ament (Fall 1978). "The imposter phenomenon in high achieving women: dynamics and therapeutic intervention" (PDF). Psychotherapy: Theory, Research & Practice. 15 (3): 241–247. doi:10.1037/h0086006.
^ Jump up to: a b c Langford, Joe; Clance, Pauline Rose (Fall 1993). "The imposter phenomenon: recent research findings regarding dynamics, personality and family patterns and their implications for treatment" (PDF). Psychotherapy: Theory, Research, Practice, Training. 30 (3): 495–501. doi:10.1037/0033-3204.30.3.495. Studies of college students (Harvey, 1981; Bussotti, 1990; Langford, 1990), college professors (Topping, 1983), and successful professionals (Dingman, 1987) have all failed, however, to reveal any sex differences in impostor feelings, suggesting that males in these populations are just as likely as females to have low expectations of success and to make attributions to non-ability related factors.
^ Jump up to: a b Lebowitz, Shana (12 January 2016). "Men are suffering from a psychological phenomenon that can undermine their success, but they're too ashamed to talk about it". businessinsider.com. Business Insider. Retrieved 8 February 2016.
Jump up ^ McElwee, Rory O'Brien; Yurak, Tricia J. (2010). "The Phenomenology Of The Impostor Phenomenon". Individual Differences Research. Social Sciences Full Text. H.W. Wilson. 8 (3): 184–197.
^ Jump up to: a b Anderson, L.V. "Feeling Like An Impostor Is Not A Syndrome". Slate. Retrieved April 30, 2017.
Jump up ^ Sakulku, Jaruwan (2011). "The Impostor Phenomenon" (PDF). International Journal of Behavioral Science. 6 (1): 73–92. Retrieved April 25, 2017.
Jump up ^ Corkindale, Gill. "Overcoming Imposter Syndrome". Harvard Business Review. Retrieved April 18, 2017.
Jump up ^ Richards, Carl (October 26, 2015). "Learning to Deal With the Impostor Syndrome". The New York Times. Retrieved 2017-12-15. Angelou said: "I have written 11 books, but each time I think, 'Uh oh, they're going to find out now. I've run a game on everybody, and they're going to find me out.'"
Jump up ^ Hanks, Tom. "Tom Hanks Says Self-Doubt Is 'A High-Wire Act That We All Walk'". NPR.org. Retrieved 2017-01-13.
Jump up ^ Aronofsky, Darren. "Michelle Pfeiffer". Wmagazine.com. Retrieved 2018-02-28.
Jump up ^ High achievers suffering from imposter syndrome News.com Dec 10 2013
Jump up ^ Neil Gaiman's commencement speech to the University of the arts graduating class of 2012 Philadelphia,
Jump up ^ Ha, Thu-Huong (May 15, 2017). "Neil Gaiman has the perfect anecdote to soothe anyone with impostor syndrome". Quartz. Retrieved June 8, 2017.
Jump up ^ Always leave them laughing (biography of Tommy Cooper) Fisher, John 2007
Jump up ^ Women who feel like frauds Forbes October 2011
Jump up ^ Emma Watson: I suffered from imposter syndrome after Harry Potter Now magazine 2011
Jump up ^ Atlassian billionaire Mike Cannon-Brookes on 'imposter syndrome', Tesla and the SA power crisis
Jump up ^ Sakulku, Jaruwan (2011). "The Impostor Phenomenon" (PDF). International Journal of Behavioral Science. 6 (1): 73–92. Retrieved April 25, 2017.
Jump up ^ http://uk.businessinsider.com/men-suffer-from-impostor-syndrome-2016-1?r=US&IR=T
Jump up ^ Vera, Elizabeth M.; Vasquez, Veronica; Corona, Rebecca (2006). "Women of Color". In Yo Jackson. Encyclopaedia of Multicultural Psychology. SAGE knowledge. Thousand Oaks, CA: SAGE Publications, Inc. pp. 475–80. Web. 1 October 2012.
Jump up ^ Laursen, Lucas. "No, You're Not an Impostor". Science Careers. Web. 23 Oct. 2013.
^ Jump up to: a b c d Hoang, Queena (2013). "The impostor phenomenon: Overcoming internalized barriers and recognizing achievements". The Vermont Connection. 34: 42–51.
Jump up ^ Schuh, John (2014). Student services: A handbook for the profession. Jossey-Bass, Inc.
Jump up ^ Weir, Kirsten. "Feel Like a Fraud?". American Psychological Association. Retrieved April 28, 2017.
Jump up ^ Ferro, Shane. "Why Impostor Syndrome Is Good For You". Huffington Post. Retrieved April 21, 2017.
^ Jump up to: a b Craddock; Birnbaum; Rodriguez; Cobb; Zeeh (2011). "Doctoral students and the impostor phenomenon: Am I smart enough to be here?". Student Affairs Research and Practice. 48. doi:10.2202/1949-6605.6321.
Jump up ^ Clark, M.; Vardeman, K.; Barba, S. (2014). "Perceived inadequacy: A study of the impostor phenomenon among college and research librarians". College & Research Libraries. 75 (3): 255–271. doi:10.5860/crl12-423.
^ Jump up to: a b c d Brookfield (1978). "Understanding and responding to the emotions of learning. In The skillful teacher: On trust, technique and responsiveness in the classroom".
Jump up ^ Dudău, D. P. (2014). "The Relation between Perfectionism and Impostor Phenomenon". Procedia - Social and Behavioral Sciences. 127 (0): 129–133. doi:10.1016/j.sbspro.2014.03.226.
^ Jump up to: a b c Faulkner (2015). "Reflections on the impostor phenomenon as a newly qualified academic librarian".
Jump up ^ Want, J.; Kleitman, S. (2006). "Impostor phenomenon and self-handicapping: Links with parenting styles and self-confidence". Personality and Individual Differences. 40 (5): 961–971. doi:10.1016/j.paid.2005.10.005.
Jump up ^ Vergauwe, J.; Wille, B.; Feys, M.; De Fruyt, F.; Anseel, F. (2015). "Fear of being exposed: The trait-relatedness of the impostor phenomenon and its relevance in the work context". Journal of Business and Psychology. 3: 565–581. doi:10.1007/s10869-014-9382-5.
^ Jump up to: a b Kumar; Jagacinski (2006). "Imposters have goals too: The imposter phenomenon and its relationship to achievement goal theory". Personality and Individual Differences. 40: 147–157. doi:10.1016/j.paid.2005.05.014.
Jump up ^ Hutchins, H. M. (2015). "Outing the imposter: A study exploring imposter phenomenon among higher education faculty". New Horizons In Adult Education & Human Resource Development. 27 (2): 3–12. doi:10.1002/nha3.20098.
Jump up ^ Matthews, Gail; Clance, Pauline Rose (February 1985). "Treatment of the impostor phenomenon in psychotherapy clients". Psychotherapy in Private Practice. 3 (1): 71–81. doi:10.1300/J294v03n01_09.
Jump up ^ Leahy, Robert L. (2005). "Work worries: What if I really mess up?". The worry cure: seven steps to stop worry from stopping you. New York: Harmony Books. pp. 273–290 (274). ISBN 1400097657. OCLC 57531355. Discusses treatment of impostor syndrome with cognitive therapy.
Jump up ^ Harris, Russ (2011). The confidence gap: a guide to overcoming fear and self-doubt. Boston: Trumpeter. ISBN 9781590309230. OCLC 694394371. Discusses treatment of impostor syndrome with acceptance and commitment therapy.
Jump up ^ Clance, Pauline Rose; Dingman, Debbara; Reviere, Susan L.; Stober, Dianne R. (June 1995). "Impostor phenomenon in an interpersonal/social context". Women & Therapy. 16 (4): 79–96 (87). doi:10.1300/J015v16n04_07. One of the most exciting and effective treatment modalities for women struggling with the impostor phenomenon is group psychotherapy.
Jump up ^ Lowman, Rodney L. (1993). "Fear of success and fear of failure". Counseling and psychotherapy of work dysfunctions. Washington, DC: American Psychological Association. pp. 74–82 (81). doi:10.1037/10133-004. ISBN 155798204X. OCLC 27812757. Group treatment programs have reported positive results in lowering FOF [fear of failure] (Rajendran & Kaliappan, 1990). The value of groups in countering the so-called impostor phenomenon, in which an individual feels that he or she has succeeded inappropriately and will soon be "found out" to be a fraud, has also been reported (Clance & O'Toole, 1987; J. A. Steinberg, 1986).
Jump up ^ Pennebaker, James W.; Smyth, Joshua M. (2016). Opening up by writing it down: how expressive writing improves health and eases emotional pain (3rd ed.). New York: Guilford Press. ISBN 9781462524921. OCLC 931646002.
Jump up ^ Bell, Lee; Young, Valerie (1986). "Imposters, fakes, and frauds". In Moore, Lynda L. Not as far as you think: the realities of working women. Lexington, Mass.: Lexington Books. p. 45. ISBN 0669108367. OCLC 12855540. As a result, Myra began to publish to feel her success, to value criticism as a useful process, and ultimately to enjoy expressing herself through writing.
Further reading[edit]
Buchanan, Leigh (September 1, 2006). "The impostor syndrome: Why do so many successful entrepreneurs feel like fakes?". Inc. magazine. Retrieved 2017-12-15.
Clance, Pauline Rose (August 13, 2013). "Impostor phenomenon". paulineroseclance.com. Retrieved 2017-12-15. Includes a reference list on the phenomenon, compiled by Clance.
Grant, Sandy (December 30, 2016). "The brilliant way feminist philosopher Simone de Beauvoir outsmarted imposter syndrome". Quartz magazine. Retrieved 2017-12-15.
"The impostor syndrome". counseling.caltech.edu. Caltech Counseling Center. Archived from the original on 2015-09-16. Retrieved 2017-12-15.


Dunning–Kruger effect
From Wikipedia, the free encyclopedia
Part of a series on
Psychology
The Greek letter 'psi', a symbol for psychology
Outline History Subfields
Basic types[show]
Applied psychology[show]
Lists[show]
Psi2.svg Psychology portal
v t e
In the field of psychology, the Dunning–Kruger effect is a cognitive bias wherein people of low ability suffer from illusory superiority, mistakenly assessing their cognitive ability as greater than it is. The cognitive bias of illusory superiority derives from the metacognitive inability of low-ability persons to recognize their own ineptitude; without the self-awareness of metacognition, low-ability people cannot objectively evaluate their actual competence or incompetence.[1]

Conversely, highly competent individuals may erroneously assume that tasks easy for them to perform are also easy for other people to perform, or that other people will have a similar understanding of subjects that they themselves are well-versed in.[2]

As described by social psychologists David Dunning and Justin Kruger, the cognitive bias of illusory superiority results from an internal illusion in people of low ability and from an external misperception in people of high ability; that is, "the miscalibration of the incompetent stems from an error about the self, whereas the miscalibration of the highly competent stems from an error about others."[1]

Contents  [hide]
1	Original study
2	Sequel studies
3	Cultural differences in self-perception
4	Popular recognition
5	Historical antecedents
6	See also
7	References
8	Further reading
Original study[edit]
The psychological phenomenon of illusory superiority was identified as a form of cognitive bias in Kruger and Dunning's 1999 study "Unskilled and Unaware of It: How Difficulties in Recognizing One's Own Incompetence Lead to Inflated Self-Assessments".[1] The identification derived from the cognitive bias evident in the criminal case of McArthur Wheeler, who robbed banks with his face covered with lemon juice, which he believed would make it invisible to the surveillance cameras. This belief was based on his misunderstanding of the chemical properties of lemon juice as an invisible ink.[3]

Other investigations of the phenomenon, such as "Why People Fail to Recognize Their Own Incompetence" (2003), indicate that much incorrect self-assessment of competence derives from the person's ignorance of a given activity's standards of performance. The pattern of overestimation of competence appeared in studies of reading comprehension, of the practice of medicine, of motor-vehicle operation, and of the playing of games such as chess and tennis.[4] Dunning and Kruger's research also indicates that training in a task, such as solving a logic puzzle, increases people's ability to accurately evaluate how good they are at it.[5]

In Self-insight: Roadblocks and Detours on the Path to Knowing Thyself (2005), Dunning described the Dunning–Kruger effect as "the anosognosia of everyday life", referring to the condition in which a disabled person either denies or seems unaware of his or her disability. He stated: "If you're incompetent, you can't know you're incompetent ... The skills you need to produce a right answer are exactly the skills you need to recognize what a right answer is."[6][7]

Sequel studies[edit]
Dunning and Kruger tested the hypotheses of the cognitive bias of illusory superiority on undergraduate students of introductory courses in psychology, by examining the students' self-assessments of their intellectual skills in logical reasoning (inductive, deductive, abductive), English grammar, and personal sense of humor. After learning their self-assessment scores, the students were asked to estimate their ranks in the psychology class. The group of competent students underestimated their class ranks, while the group of incompetent students overestimated their ranks; yet the incompetent group did not estimate their class ranks as higher than the ranks estimated by the competent group. Across four studies, the research indicated that the study participants who scored in the bottom quartile on tests of their sense of humor, knowledge of grammar, and logical reasoning overestimated their test performance and their abilities; despite test scores that placed them in the 12th percentile, the participants estimated they ranked in the 62nd percentile.[1][8]

Moreover, competent students tended to underestimate their own competence, because they erroneously presumed that tasks easy for them to perform were also easy for other people to perform. Incompetent students improved their ability to correctly estimate their class rank after receiving minimal tutoring in the skills they previously lacked, regardless of any objective improvement gained in said skills of perception.[1] The study Mind-Reading and Metacognition: Narcissism, not Actual Competence, Predicts Self-estimated Ability (2004) extended the cognitive-bias premise of illusory superiority to test the subjects' emotional sensitivity toward other people and their perceptions of other people.[9]

The study How Chronic Self-Views Influence (and Potentially Mislead) Estimates of Performance (2003) indicated a shift in the participants' view of themselves when influenced by external cues. The participants' knowledge of geography was tested; some tests were intended to positively affect the participant's self-view and some were intended to affect it negatively. The participants then were asked to rate their performances; the participants given tests with a positive intent reported better performance than did the participants given tests with a negative intent.[10]

To test Dunning and Kruger’s hypotheses, "that people, at all performance levels, are equally poor at estimating their relative performance", the study Skilled or Unskilled, but Still Unaware of It: How Perceptions of Difficulty Drive Miscalibration in Relative Comparisons (2006) investigated three studies that manipulated the "perceived difficulty of the tasks, and, hence, [the] participants' beliefs about their relative standing". The investigation indicated that when the experimental subjects were presented with moderately difficult tasks, there was little variation among the best performers and the worst performers in their ability to accurately predict their performance. With more difficult tasks, the best performers were less accurate in predicting their performance than were the worst performers. Therefore, judges at all levels of skill are subject to similar degrees of error in the performance of tasks.[2]

In testing alternative explanations for the cognitive bias of illusory superiority, the study Why the Unskilled are Unaware: Further Explorations of (Absent) Self-insight Among the Incompetent (2008) reached the same conclusions as previous studies of the Dunning–Kruger effect: that, in contrast to high performers, "poor performers do not learn from feedback suggesting a need to improve".[11]

Cultural differences in self-perception[edit]
Studies of the Dunning–Kruger effect usually have been of North Americans, but studies of Japanese people suggest that cultural forces have a role in the occurrence of the effect.[12] The study Divergent Consequences of Success and Failure in Japan and North America: An Investigation of Self-improving Motivations and Malleable Selves (2001) indicated that Japanese people tended to underestimate their abilities, and tended to see underachievement (failure) as an opportunity to improve their abilities at a given task, thereby increasing their value to the social group.[13]

Popular recognition[edit]
In 2000, Kruger and Dunning were awarded an Ig Nobel Prize, in satirical recognition of the scientific work recorded in "their modest report".[14]

"The Dunning-Kruger Song"[15] is part of The Incompetence Opera,[16] a mini-opera that premiered at the Ig Nobel Prize ceremony in 2017.[17] The mini-opera is billed as "a musical encounter with the Peter Principle and the Dunning-Kruger Effect".[18]

Historical antecedents[edit]
Although the Dunning–Kruger effect was formulated in 1999, the cognitive bias of illusory superiority has been known throughout history and identified by intellectuals, such as:

the philosopher Confucius (551–479 BC), who said, "Real knowledge is to know the extent of one's ignorance"[4]
the philosopher Socrates (470–399 BC), who interpreted a prophecy from the Delphic oracle that he was wise despite feeling that he did not fully understand anything, as the wisdom of being aware that he knew nothing
the playwright William Shakespeare (1564–1616), who said, "The fool doth think he is wise, but the wise man knows himself to be a fool" (As You Like It, V. i.)[19]
the poet Alexander Pope (1688–1744) wrote in An Essay on Criticism, 1709: "A little learning is a dangerous thing"
the novelist Henry Fielding (1707–1754), who, in the novel "The History of Tom Jones, a Foundling," wrote: "For men of true learning, and almost universal knowledge, always compassionate [pity] the ignorance of others; but fellows who excel in some little, low, contemptible art, are always certain to despise those who are unacquainted with that art."
the naturalist Charles Darwin (1809–1882), who said, "Ignorance more frequently begets confidence than does knowledge"[1]
the philosopher Friedrich Nietzsche (1844–1900), who wrote in Human, All Too Human (aphorism 483), "The Enemies of Truth. — Convictions are more dangerous enemies of truth than lies."[20]
the poet W. B. Yeats (1865–1939), who, in the poem "The Second Coming", said: "The best lack all conviction, while the worst / Are full of passionate intensity."[11]
the philosopher and mathematician Bertrand Russell (1872–1970), who said, "One of the painful things about our time is that those who feel certainty are stupid, and those with any imagination and understanding are filled with doubt and indecision."[11]
See also[edit]
	Psychology portal
Curse of knowledge
Four stages of competence
Grandiose delusions
Hanlon's razor
Hubris
Impostor syndrome
Narcissism
Narcissistic personality disorder
Not even wrong
Optimism bias
Overconfidence effect
Peter principle
Self-deception
Self-efficacy
Self-serving bias
Superiority complex
Ultracrepidarianism
Law of triviality
References[edit]
^ Jump up to: a b c d e f Kruger, Justin; Dunning, David (1999). "Unskilled and Unaware of It: How Difficulties in Recognizing One's Own Incompetence Lead to Inflated Self-Assessments". Journal of Personality and Social Psychology. American Psychological Association. 77 (6): 1121–1134. CiteSeerX 10.1.1.64.2655 Freely accessible. doi:10.1037/0022-3514.77.6.1121. PMID 10626367.
^ Jump up to: a b Burson, Katherine A.; Larrick, Richard P.; Klayman, Joshua (2006). "Skilled or unskilled, but still unaware of it: How perceptions of difficulty drive miscalibration in relative comparisons". Journal of Personality and Social Psychology. American Psychological Association. 90 (1): 60–77. doi:10.1037/0022-3514.90.1.60. hdl:2027.42/39168. PMID 16448310.
Jump up ^ "Why losers have delusions of grandeur". New York Post. 23 May 2010. Retrieved 19 March 2014.
^ Jump up to: a b Dunning, David; Johnson, Kerri; Ehrlinger, Joyce; Kruger, Justin (1 June 2003). "Why People Fail to Recognize Their Own Incompetence". Current Directions in Psychological Science. 12 (3): 83–87. doi:10.1111/1467-8721.01235.
Jump up ^ Lee, Chris (5 November 2016). "Revisiting why incompetents think they're awesome". Ars Technica. p. 3. Retrieved 11 January 2014.
Jump up ^ Morris, Errol (20 June 2010). "The Anosognosic's Dilemma: Something's Wrong but You'll Never Know What It Is (Part 1)". New York Times. Retrieved 7 March 2011.
Jump up ^ Dunning, David (2005). Self-insight: Roadblocks and Detours on the Path to Knowing Thyself. New York: Psychology Press. pp. 14–15. ISBN 1841690740. OCLC 56066405.
Jump up ^ Yarkoni, Tal (7 July 2010). "What the Dunning-Kruger effect Is and Isn't". Retrieved 28 July 2017.
Jump up ^ Ames, Daniel R.; Kammrath, Lara K. (September 2004). "Mind-Reading and Metacognition: Narcissism, not Actual Competence, Predicts Self-Estimated Ability" (PDF). Journal of Nonverbal Behavior. 28 (3): 187–209. doi:10.1023/b:jonb.0000039649.20015.0e. ISSN 0191-5886.
Jump up ^ Ehrlinger, Joyce; Dunning, David (January 2003). "How chronic self-views influence (and potentially mislead) estimates of performance". Journal of Personality and Social Psychology. American Psychological Association. 84 (1): 5–17. doi:10.1037/0022-3514.84.1.5. PMID 12518967.
^ Jump up to: a b c Ehrlinger, Joyce; Johnson, Kerri; Banner, Matthew; Dunning, David; Kruger, Justin (2008). "Why the unskilled are unaware: Further explorations of (absent) self-insight among the incompetent". Organizational Behavior and Human Decision Processes. 105 (1): 98–121. doi:10.1016/j.obhdp.2007.05.002. PMC 2702783 Freely accessible. PMID 19568317.
Jump up ^ DeAngelis, Tori (February 2003). "Why We overestimate Our Competence". Monitor on Psychology. American Psychological Association. 34 (2): 60. ISSN 1529-4978. Retrieved 7 March 2011.
Jump up ^ Heine, S. J.; Lehman, D. R.; Ide, E.; Leung, C.; Kitayama, S.; Takata, T.; Matsumoto, H. (October 2001). "Divergent Consequences of Success and Failure in Japan and North America: An Investigation of Self-improving Motivations and Malleable Selves". Journal of Personality and Social Psychology. American Psychological Association. 81 (4): 599–615. doi:10.1037/0022-3514.81.4.599. ISSN 0022-3514. PMID 11642348.
Jump up ^ "Ig Nobel Past Winners". Improbable Research. Retrieved 7 March 2011.
Jump up ^ "The Dunning-Kruger Song", from The Incompetence Opera. YouTube.com. ImprobableResearch. 15 Jan 2018. Retrieved 2018-01-18.
Jump up ^ The Incompetence Opera. YouTube.com. ImprobableResearch. 29 Dec 2017. Retrieved 2018-01-18.
Jump up ^ "The 27th First Annual Ig Nobel Prize Ceremony & Lectures". Retrieved 2018-01-18.
Jump up ^ "Preview: "The Incompetence Opera"". Improbable Research. Retrieved 18 January 2018.
Jump up ^ Fuller, Geraint (2011). "Ignorant of ignorance?". Practical Neurology. 11 (6): 365–365. doi:10.1136/practneurol-2011-000117. ISSN 1474-7758. PMID 22100949.
Jump up ^ Nietzsche, Friedrich (1910). Human, All Too Human (PDF). Translated by Zimmern, Helen. Edinburgh: T. N. FOULIS. p. 355. ISBN 978-1591026785.

Computer science
From Wikipedia, the free encyclopedia
Part of a series on
Science
Formal
[show]
Physical
[show]
Life
[show]
Social
[show]
Applied
[show]
Interdisciplinary
[show]
Philosophy History
[show]
Glossaries of science and engineering
[show]
Outline Portal Category
v t e
large capital lambda	Plot of a quicksort algorithm
Utah teapot representing computer graphics	Microsoft Tastenmaus mouse representing human-computer interaction
Computer science deals with the theoretical foundations of information and computation, together with practical techniques for the implementation and application of these foundations.
Computer science is the study of the theory, experimentation, and engineering that form the basis for the design and use of computers. It is the scientific and practical approach to computation and its applications and the systematic study of the feasibility, structure, expression, and mechanization of the methodical procedures (or algorithms) that underlie the acquisition, representation, processing, storage, communication of, and access to, information. An alternate, more succinct definition of computer science is the study of automating algorithmic processes that scale. A computer scientist specializes in the theory of computation and the design of computational systems.[1]

Its fields can be divided into a variety of theoretical and practical disciplines. Some fields, such as computational complexity theory (which explores the fundamental properties of computational and intractable problems), are highly abstract, while fields such as computer graphics emphasize real-world visual applications. Other fields still focus on challenges in implementing computation. For example, programming language theory considers various approaches to the description of computation, while the study of computer programming itself investigates various aspects of the use of programming language and complex systems. Human–computer interaction considers the challenges in making computers and computations useful, usable, and universally accessible to humans.

Contents  [hide]
1	History
1.1	Contributions
2	Etymology
3	Philosophy
4	Areas of computer science
4.1	Theoretical computer science
4.1.1	Data structures and algorithms
4.1.2	Theory of computation
4.1.3	Information and coding theory
4.1.4	Programming language theory
4.1.5	Formal methods
4.2	Computer systems
4.2.1	Computer architecture and computer engineering
4.2.2	Computer performance analysis
4.2.3	Concurrent, parallel and distributed systems
4.2.4	Computer networks
4.2.5	Computer security and cryptography
4.2.6	Databases
4.3	Computer applications
4.3.1	Computer graphics and visualization
4.3.2	Human–computer interaction
4.3.3	Scientific computing
4.3.4	Artificial intelligence
4.4	Software engineering
5	The great insights of computer science
6	Academia
7	Education
8	See also
9	Notes
10	References
11	Further reading
12	External links
History[edit]
Main article: History of computer science
History of computing
Hardware
Hardware before 1960 Hardware 1960s to present
Software
Software Unix Free software and open-source software
Computer science
Artificial intelligence Compiler construction Computer science Operating systems Programming languages Prominent pioneers Software engineering
Modern concepts
General-purpose CPUs Graphical user interface Internet Laptops Personal computers Video games World Wide Web
By country
Bulgaria Poland Romania Soviet Bloc Soviet Union Yugoslavia
Timeline of computing
before 1950 1950–1979 1980–1989 1990–1999 2000–2009 2010–2019 more timelines ...
Category Category
v t e

Charles Babbage is sometimes referred as "father of computing".[2]

Ada Lovelace is credited with writing the first algorithm intended for processing on a computer.[3]
The earliest foundations of what would become computer science predate the invention of the modern digital computer. Machines for calculating fixed numerical tasks such as the abacus have existed since antiquity, aiding in computations such as multiplication and division. Further, algorithms for performing computations have existed since antiquity, even before the development of sophisticated computing equipment.

Wilhelm Schickard designed and constructed the first working mechanical calculator in 1623.[4] In 1673, Gottfried Leibniz demonstrated a digital mechanical calculator, called the Stepped Reckoner.[5] He may be considered the first computer scientist and information theorist, for, among other reasons, documenting the binary number system. In 1820, Thomas de Colmar launched the mechanical calculator industry[note 1] when he released his simplified arithmometer, which was the first calculating machine strong enough and reliable enough to be used daily in an office environment. Charles Babbage started the design of the first automatic mechanical calculator, his Difference Engine, in 1822, which eventually gave him the idea of the first programmable mechanical calculator, his Analytical Engine.[6] He started developing this machine in 1834, and "in less than two years, he had sketched out many of the salient features of the modern computer".[7] "A crucial step was the adoption of a punched card system derived from the Jacquard loom"[7] making it infinitely programmable.[note 2] In 1843, during the translation of a French article on the Analytical Engine, Ada Lovelace wrote, in one of the many notes she included, an algorithm to compute the Bernoulli numbers, which is considered to be the first computer program.[8] Around 1885, Herman Hollerith invented the tabulator, which used punched cards to process statistical information; eventually his company became part of IBM. In 1937, one hundred years after Babbage's impossible dream, Howard Aiken convinced IBM, which was making all kinds of punched card equipment and was also in the calculator business[9] to develop his giant programmable calculator, the ASCC/Harvard Mark I, based on Babbage's Analytical Engine, which itself used cards and a central computing unit. When the machine was finished, some hailed it as "Babbage's dream come true".[10]

During the 1940s, as new and more powerful computing machines were developed, the term computer came to refer to the machines rather than their human predecessors.[11] As it became clear that computers could be used for more than just mathematical calculations, the field of computer science broadened to study computation in general. Computer science began to be established as a distinct academic discipline in the 1950s and early 1960s.[12][13] The world's first computer science degree program, the Cambridge Diploma in Computer Science, began at the University of Cambridge Computer Laboratory in 1953. The first computer science degree program in the United States was formed at Purdue University in 1962.[14] Since practical computers became available, many applications of computing have become distinct areas of study in their own rights.

Although many initially believed it was impossible that computers themselves could actually be a scientific field of study, in the late fifties it gradually became accepted among the greater academic population.[15][16] It is the now well-known IBM brand that formed part of the computer science revolution during this time. IBM (short for International Business Machines) released the IBM 704[17] and later the IBM 709[18] computers, which were widely used during the exploration period of such devices. "Still, working with the IBM [computer] was frustrating […] if you had misplaced as much as one letter in one instruction, the program would crash, and you would have to start the whole process over again".[15] During the late 1950s, the computer science discipline was very much in its developmental stages, and such issues were commonplace.[16]

Time has seen significant improvements in the usability and effectiveness of computing technology.[19] Modern society has seen a significant shift in the users of computer technology, from usage only by experts and professionals, to a near-ubiquitous user base. Initially, computers were quite costly, and some degree of human aid was needed for efficient use—in part from professional computer operators. As computer adoption became more widespread and affordable, less human assistance was needed for common usage.

See also: History of computing and History of informatics
Contributions[edit]

The German military used the Enigma machine (shown here) during World War II for communications they wanted kept secret. The large-scale decryption of Enigma traffic at Bletchley Park was an important factor that contributed to Allied victory in WWII.[20]
Despite its short history as a formal academic discipline, computer science has made a number of fundamental contributions to science and society—in fact, along with electronics, it is a founding science of the current epoch of human history called the Information Age and a driver of the information revolution, seen as the third major leap in human technological progress after the Industrial Revolution (1750–1850 CE) and the Agricultural Revolution (8000–5000 BC).

These contributions include:

The start of the "Digital Revolution", which includes the current Information Age and the Internet.[21]
A formal definition of computation and computability, and proof that there are computationally unsolvable and intractable problems.[22]
The concept of a programming language, a tool for the precise expression of methodological information at various levels of abstraction.[23]
In cryptography, breaking the Enigma code was an important factor contributing to the Allied victory in World War II.[20]
Scientific computing enabled practical evaluation of processes and situations of great complexity, as well as experimentation entirely by software. It also enabled advanced study of the mind, and mapping of the human genome became possible with the Human Genome Project.[21] Distributed computing projects such as Folding@home explore protein folding.
Algorithmic trading has increased the efficiency and liquidity of financial markets by using artificial intelligence, machine learning, and other statistical and numerical techniques on a large scale.[24] High frequency algorithmic trading can also exacerbate volatility.[25]
Computer graphics and computer-generated imagery have become ubiquitous in modern entertainment, particularly in television, cinema, advertising, animation and video games. Even films that feature no explicit CGI are usually "filmed" now on digital cameras, or edited or post-processed using a digital video editor.[26][27]
Simulation of various processes, including computational fluid dynamics, physical, electrical, and electronic systems and circuits, as well as societies and social situations (notably war games) along with their habitats, among many others. Modern computers enable optimization of such designs as complete aircraft. Notable in electrical and electronic circuit design are SPICE, as well as software for physical realization of new (or modified) designs. The latter includes essential design software for integrated circuits.[citation needed]
Artificial intelligence is becoming increasingly important as it gets more efficient and complex. There are many applications of AI, some of which can be seen at home, such as robotic vacuum cleaners. It is also present in video games and on the modern battlefield in drones, anti-missile systems, and squad support robots.
Human–computer interaction combines novel algorithms with design strategies that enable rapid human performance, low error rates, ease in learning, and high satisfaction. Researchers use ethnographic observation and automated data collection to understand user needs, then conduct usability tests to refine designs. Key innovations include the direct manipulation, selectable web links, touchscreen designs, mobile applications, and virtual reality.
Etymology[edit]
See also: Informatics § Etymology
Although first proposed in 1956,[16] the term "computer science" appears in a 1959 article in Communications of the ACM,[28] in which Louis Fein argues for the creation of a Graduate School in Computer Sciences analogous to the creation of Harvard Business School in 1921,[29] justifying the name by arguing that, like management science, the subject is applied and interdisciplinary in nature, while having the characteristics typical of an academic discipline.[28] His efforts, and those of others such as numerical analyst George Forsythe, were rewarded: universities went on to create such programs, starting with Purdue in 1962.[30] Despite its name, a significant amount of computer science does not involve the study of computers themselves. Because of this, several alternative names have been proposed.[31] Certain departments of major universities prefer the term computing science, to emphasize precisely that difference. Danish scientist Peter Naur suggested the term datalogy,[32] to reflect the fact that the scientific discipline revolves around data and data treatment, while not necessarily involving computers. The first scientific institution to use the term was the Department of Datalogy at the University of Copenhagen, founded in 1969, with Peter Naur being the first professor in datalogy. The term is used mainly in the Scandinavian countries. An alternative term, also proposed by Naur, is data science; this is now used for a distinct field of data analysis, including statistics and databases.

Also, in the early days of computing, a number of terms for the practitioners of the field of computing were suggested in the Communications of the ACM—turingineer, turologist, flow-charts-man, applied meta-mathematician, and applied epistemologist.[33] Three months later in the same journal, comptologist was suggested, followed next year by hypologist.[34] The term computics has also been suggested.[35] In Europe, terms derived from contracted translations of the expression "automatic information" (e.g. "informazione automatica" in Italian) or "information and mathematics" are often used, e.g. informatique (French), Informatik (German), informatica (Italian, Dutch), informática (Spanish, Portuguese), informatika (Slavic languages and Hungarian) or pliroforiki (πληροφορική, which means informatics) in Greek. Similar words have also been adopted in the UK (as in the School of Informatics of the University of Edinburgh).[36] "In the U.S., however, informatics is linked with applied computing, or computing in the context of another domain."[37]

A folkloric quotation, often attributed to—but almost certainly not first formulated by—Edsger Dijkstra, states that "computer science is no more about computers than astronomy is about telescopes."[note 3] The design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science. For example, the study of computer hardware is usually considered part of computer engineering, while the study of commercial computer systems and their deployment is often called information technology or information systems. However, there has been much cross-fertilization of ideas between the various computer-related disciplines. Computer science research also often intersects other disciplines, such as philosophy, cognitive science, linguistics, mathematics, physics, biology, statistics, and logic.

Computer science is considered by some to have a much closer relationship with mathematics than many scientific disciplines, with some observers saying that computing is a mathematical science.[12] Early computer science was strongly influenced by the work of mathematicians such as Kurt Gödel, Alan Turing, Rózsa Péter and Alonzo Church and there continues to be a useful interchange of ideas between the two fields in areas such as mathematical logic, category theory, domain theory, and algebra.[16]

The relationship between computer science and software engineering is a contentious issue, which is further muddied by disputes over what the term "software engineering" means, and how computer science is defined.[38] David Parnas, taking a cue from the relationship between other engineering and science disciplines, has claimed that the principal focus of computer science is studying the properties of computation in general, while the principal focus of software engineering is the design of specific computations to achieve practical goals, making the two separate but complementary disciplines.[39]

The academic, political, and funding aspects of computer science tend to depend on whether a department formed with a mathematical emphasis or with an engineering emphasis. Computer science departments with a mathematics emphasis and with a numerical orientation consider alignment with computational science. Both types of departments tend to make efforts to bridge the field educationally if not across all research.

Philosophy[edit]
Main article: Philosophy of computer science
A number of computer scientists have argued for the distinction of three separate paradigms in computer science. Peter Wegner argued that those paradigms are science, technology, and mathematics.[40] Peter Denning's working group argued that they are theory, abstraction (modeling), and design.[41] Amnon H. Eden described them as the "rationalist paradigm" (which treats computer science as a branch of mathematics, which is prevalent in theoretical computer science, and mainly employs deductive reasoning), the "technocratic paradigm" (which might be found in engineering approaches, most prominently in software engineering), and the "scientific paradigm" (which approaches computer-related artifacts from the empirical perspective of natural sciences, identifiable in some branches of artificial intelligence).[42]

Areas of computer science[edit]
Further information: Outline of computer science
As a discipline, computer science spans a range of topics from theoretical studies of algorithms and the limits of computation to the practical issues of implementing computing systems in hardware and software.[43][44] CSAB, formerly called Computing Sciences Accreditation Board—which is made up of representatives of the Association for Computing Machinery (ACM), and the IEEE Computer Society (IEEE CS)[45]—identifies four areas that it considers crucial to the discipline of computer science: theory of computation, algorithms and data structures, programming methodology and languages, and computer elements and architecture. In addition to these four areas, CSAB also identifies fields such as software engineering, artificial intelligence, computer networking and communication, database systems, parallel computation, distributed computation, human–computer interaction, computer graphics, operating systems, and numerical and symbolic computation as being important areas of computer science.[43]

Theoretical computer science[edit]
Main article: Theoretical computer science
Theoretical Computer Science is mathematical and abstract in spirit, but it derives its motivation from practical and everyday computation. Its aim is to understand the nature of computation and, as a consequence of this understanding, provide more efficient methodologies. All studies related to mathematical, logic and formal concepts and methods could be considered as theoretical computer science, provided that the motivation is clearly drawn from the field of computing.

Data structures and algorithms[edit]
Data structures and algorithms is the study of commonly used computational methods and their computational efficiency.

O(n2)	Sorting quicksort anim.gif	Singly linked list.png	TSP Deutschland 3.png	SimplexRangeSearching.svg
Analysis of algorithms	Algorithms	Data structures	Combinatorial optimization	Computational geometry
Theory of computation[edit]
Main article: Theory of computation
According to Peter Denning, the fundamental question underlying computer science is, "What can be (efficiently) automated?"[12] Theory of computation is focused on answering fundamental questions about what can be computed and what amount of resources are required to perform those computations. In an effort to answer the first question, computability theory examines which computational problems are solvable on various theoretical models of computation. The second question is addressed by computational complexity theory, which studies the time and space costs associated with different approaches to solving a multitude of computational problems.

The famous P = NP? problem, one of the Millennium Prize Problems,[46] is an open problem in the theory of computation.

DFAexample.svg	Wang tiles.svg	P = NP?	GNITIRW-TERCES	Blochsphere.svg
Automata theory	Computability theory	Computational complexity theory	Cryptography	Quantum computing theory
Information and coding theory[edit]
Main articles: Information theory and Coding theory
Information theory is related to the quantification of information. This was developed by Claude Shannon to find fundamental limits on signal processing operations such as compressing data and on reliably storing and communicating data.[47] Coding theory is the study of the properties of codes (systems for converting information from one form to another) and their fitness for a specific application. Codes are used for data compression, cryptography, error detection and correction, and more recently also for network coding. Codes are studied for the purpose of designing efficient and reliable data transmission methods.

Programming language theory[edit]
Main article: Programming language theory
Programming language theory is a branch of computer science that deals with the design, implementation, analysis, characterization, and classification of programming languages and their individual features. It falls within the discipline of computer science, both depending on and affecting mathematics, software engineering, and linguistics. It is an active research area, with numerous dedicated academic journals.

Γ
⊢
x
:
Int
\Gamma \vdash x:{\text{Int}}	Compiler.svg	Python add5 syntax.svg
Type theory	Compiler design	Programming languages
Formal methods[edit]
Main article: Formal methods
Formal methods are a particular kind of mathematically based technique for the specification, development and verification of software and hardware systems. The use of formal methods for software and hardware design is motivated by the expectation that, as in other engineering disciplines, performing appropriate mathematical analysis can contribute to the reliability and robustness of a design. They form an important theoretical underpinning for software engineering, especially where safety or security is involved. Formal methods are a useful adjunct to software testing since they help avoid errors and can also give a framework for testing. For industrial use, tool support is required. However, the high cost of using formal methods means that they are usually only used in the development of high-integrity and life-critical systems, where safety or security is of utmost importance. Formal methods are best described as the application of a fairly broad variety of theoretical computer science fundamentals, in particular logic calculi, formal languages, automata theory, and program semantics, but also type systems and algebraic data types to problems in software and hardware specification and verification.

Computer systems[edit]
Computer architecture and computer engineering[edit]
Main articles: Computer architecture and Computer engineering
Computer architecture, or digital computer organization, is the conceptual design and fundamental operational structure of a computer system. It focuses largely on the way by which the central processing unit performs internally and accesses addresses in memory.[48] The field often involves disciplines of computer engineering and electrical engineering, selecting and interconnecting hardware components to create computers that meet functional, performance, and cost goals.

NOR ANSI.svg	Fivestagespipeline.png	SIMD.svg
Digital logic	Microarchitecture	Multiprocessing
Roomba original.jpg	Flowchart.png	Operating system placement.svg
Ubiquitous computing	Systems architecture	Operating systems
Computer performance analysis[edit]
Main article: Computer performance
Computer performance analysis is the study of work flowing through computers with the general goals of improving throughput, controlling response time, using resources efficiently, eliminating bottlenecks, and predicting performance under anticipated peak loads.[49]

Concurrent, parallel and distributed systems[edit]
Main articles: Concurrency (computer science) and Distributed computing
Concurrency is a property of systems in which several computations are executing simultaneously, and potentially interacting with each other. A number of mathematical models have been developed for general concurrent computation including Petri nets, process calculi and the Parallel Random Access Machine model. A distributed system extends the idea of concurrency onto multiple computers connected through a network. Computers within the same distributed system have their own private memory, and information is often exchanged among themselves to achieve a common goal.

Computer networks[edit]
Main article: Computer network
This branch of computer science aims to manage networks between computers worldwide.

Computer security and cryptography[edit]
Main articles: Computer security and Cryptography
Computer security is a branch of computer technology, whose objective includes protection of information from unauthorized access, disruption, or modification while maintaining the accessibility and usability of the system for its intended users. Cryptography is the practice and study of hiding (encryption) and therefore deciphering (decryption) information. Modern cryptography is largely related to computer science, for many encryption and decryption algorithms are based on their computational complexity.

Databases[edit]
Main article: Database
A database is intended to organize, store, and retrieve large amounts of data easily. Digital databases are managed using database management systems to store, create, maintain, and search data, through database models and query languages.

Computer applications[edit]
Computer graphics and visualization[edit]
Main article: Computer graphics (computer science)
Computer graphics is the study of digital visual contents, and involves synthesis and manipulation of image data. The study is connected to many other fields in computer science, including computer vision, image processing, and computational geometry, and is heavily applied in the fields of special effects and video games.

Human–computer interaction[edit]
Main article: Human–computer interaction
Research that develops theories, principles, and guidelines for user interface designers, so they can create satisfactory user experiences with desktop, laptop, and mobile devices.

Scientific computing[edit]
Scientific computing (or computational science) is the field of study concerned with constructing mathematical models and quantitative analysis techniques and using computers to analyze and solve scientific problems. In practical use, it is typically the application of computer simulation and other forms of computation to problems in various scientific disciplines.

Lorenz attractor yb.svg	Quark wiki.jpg	Naphthalene-3D-balls.png	1u04-argonaute.png
Numerical analysis	Computational physics	Computational chemistry	Bioinformatics
Artificial intelligence[edit]
Main article: Artificial intelligence
Artificial intelligence (AI) aims to or is required to synthesize goal-orientated processes such as problem-solving, decision-making, environmental adaptation, learning and communication found in humans and animals. From its origins in cybernetics and in the Dartmouth Conference (1956), artificial intelligence research has been necessarily cross-disciplinary, drawing on areas of expertise such as applied mathematics, symbolic logic, semiotics, electrical engineering, philosophy of mind, neurophysiology, and social intelligence. AI is associated in the popular mind with robotic development, but the main field of practical application has been as an embedded component in areas of software development, which require computational understanding. The starting-point in the late 1940s was Alan Turing's question "Can computers think?", and the question remains effectively unanswered although the Turing test is still used to assess computer output on the scale of human intelligence. But the automation of evaluative and predictive tasks has been increasingly successful as a substitute for human monitoring and intervention in domains of computer application involving complex real-world data.

Nicolas P. Rougier's rendering of the human brain.png	Human eye, rendered from Eye.png	Corner.png
Machine learning	Computer vision	Image processing
KnnClassification.svg	Julia iteration data.png	Sky.png
Pattern recognition	Data mining	Evolutionary computation
Neuron.svg	English.png	HONDA ASIMO.jpg
Knowledge representation and reasoning	Natural language processing	Robotics
Software engineering[edit]
Main article: Software engineering
See also: Computer programming
Software engineering is the study of designing, implementing, and modifying software in order to ensure it is of high quality, affordable, maintainable, and fast to build. It is a systematic approach to software design, involving the application of engineering practices to software. Software engineering deals with the organizing and analyzing of software—it doesn't just deal with the creation or manufacture of new software, but its internal maintenance and arrangement. Both computer applications software engineers and computer systems software engineers are projected to be among the fastest growing occupations from 2008 to 2018.

The great insights of computer science[edit]
The philosopher of computing Bill Rapaport noted three Great Insights of Computer Science:[50]

Gottfried Wilhelm Leibniz's, George Boole's, Alan Turing's, Claude Shannon's, and Samuel Morse's insight: there are only two objects that a computer has to deal with in order to represent "anything".[note 4]
All the information about any computable problem can be represented using only 0 and 1 (or any other bistable pair that can flip-flop between two easily distinguishable states, such as "on/off", "magnetized/de-magnetized", "high-voltage/low-voltage", etc.).
See also: Digital physics
Alan Turing's insight: there are only five actions that a computer has to perform in order to do "anything".
Every algorithm can be expressed in a language for a computer consisting of only five basic instructions:
move left one location;
move right one location;
read symbol at current location;
print 0 at current location;
print 1 at current location.
See also: Turing machine
Corrado Böhm and Giuseppe Jacopini's insight: there are only three ways of combining these actions (into more complex ones) that are needed in order for a computer to do "anything".
Only three rules are needed to combine any set of basic instructions into more complex ones:
sequence: first do this, then do that;
selection: IF such-and-such is the case, THEN do this, ELSE do that;
repetition: WHILE such-and-such is the case DO this.
Note that the three rules of Boehm's and Jacopini's insight can be further simplified with the use of goto (which means it is more elementary than structured programming).
See also: Elementary function arithmetic § Friedman's grand conjecture
Academia[edit]
Further information: List of computer science conferences and Category:Computer science journals
Conferences are important events for computer science research. During these conferences, researchers from the public and private sectors present their recent work and meet. Unlike in most other academic fields, in computer science, the prestige of conference papers is greater than that of journal publications.[51][52] One proposed explanation for this is the quick development of this relatively new field requires rapid review and distribution of results, a task better handled by conferences than by journals.[53]

Education[edit]
Since computer science is a relatively new field, it is not as widely taught in schools and universities as other academic subjects. For example, in 2014, Code.org estimated that only 10 percent of high schools in the United States offered computer science education.[54] A 2010 report by Association for Computing Machinery (ACM) and Computer Science Teachers Association (CSTA) revealed that only 14 out of 50 states have adopted significant education standards for high school computer science.[55] However, computer science education is growing.[56] Some countries, such as Israel, New Zealand and South Korea, have already included computer science in their respective national secondary education curriculum.[57][58] Several countries are following suit.[59]

In most countries, there is a significant gender gap in computer science education. For example, in the US about 20% of computer science degrees in 2012 were conferred to women.[60] This gender gap also exists in other Western countries.[61] However, in some parts of the world, the gap is small or nonexistent. In 2011, approximately half of all computer science degrees in Malaysia were conferred to women.[62] In 2001, women made up 54.5% of computer science graduates in Guyana.[61]

See also[edit]
Main article: Outline of computer science
icon	Computer science portal
Academic genealogy of computer scientists
Association for Computing Machinery
Computer Science Teachers Association
Informatics and Engineering informatics
List of academic computer science departments
List of computer scientists
List of publications in computer science
List of pioneers in computer science
List of unsolved problems in computer science
Outline of software engineering
Technology transfer in computer science
Turing Award
 Computer science – Wikipedia book

Notes[edit]
Jump up ^ In 1851
Jump up ^ "The introduction of punched cards into the new engine was important not only as a more convenient form of control than the drums, or because programs could now be of unlimited extent, and could be stored and repeated without the danger of introducing errors in setting the machine by hand; it was important also because it served to crystallize Babbage's feeling that he had invented something really new, something much more than a sophisticated calculating machine." Bruce Collier, 1970
Jump up ^ See the entry "Computer science" on Wikiquote for the history of this quotation.
Jump up ^ The word "anything" is written in quotation marks because there are things that computers cannot do. One example is: to answer the question if an arbitrary given computer program will eventually finish or run forever (the Halting problem).
References[edit]
Jump up ^ "WordNet Search—3.1". Wordnetweb.princeton.edu. Retrieved 14 May 2012.
Jump up ^ "Charles Babbage Institute: Who Was Charles Babbage?". cbi.umn.edu. Retrieved 28 December 2016.
Jump up ^ "Ada Lovelace | Babbage Engine | Computer History Museum". www.computerhistory.org. Retrieved 28 December 2016.
Jump up ^ "Wilhelm Schickard – Ein Computerpionier" (PDF).
Jump up ^ "A Brief History of Computing".
Jump up ^ "Science Museum—Introduction to Babbage". Archived from the original on September 8, 2006. Retrieved 24 September 2006.
^ Jump up to: a b Anthony Hyman (1982). Charles Babbage, pioneer of the computer.
Jump up ^ "A Selection and Adaptation From Ada's Notes found in Ada, The Enchantress of Numbers," by Betty Alexandra Toole Ed.D. Strawberry Press, Mill Valley, CA". Archived from the original on February 10, 2006. Retrieved 4 May 2006.
Jump up ^ "In this sense Aiken needed IBM, whose technology included the use of punched cards, the accumulation of numerical data, and the transfer of numerical data from one register to another", Bernard Cohen, p.44 (2000)
Jump up ^ Brian Randell, p. 187, 1975
Jump up ^ The Association for Computing Machinery (ACM) was founded in 1947.
^ Jump up to: a b c Denning, Peter J. (2000). "Computer Science: The Discipline" (PDF). Encyclopedia of Computer Science. Archived from the original (PDF) on May 25, 2006.
Jump up ^ "Some EDSAC statistics". University of Cambridge. Retrieved 19 November 2011.
Jump up ^ "Computer science pioneer Samuel D. Conte dies at 85". Purdue Computer Science. July 1, 2002. Retrieved December 12, 2014.
^ Jump up to: a b Levy, Steven (1984). Hackers: Heroes of the Computer Revolution. Doubleday. ISBN 0-385-19195-2.
^ Jump up to: a b c d Tedre, Matti (2014). The Science of Computing: Shaping a Discipline. Taylor and Francis / CRC Press.
Jump up ^ "IBM 704 Electronic Data Processing System—CHM Revolution". Computerhistory.org. Retrieved 7 July 2013.
Jump up ^ "IBM 709: a powerful new data processing system" (PDF). Computer History Museum. Retrieved December 12, 2014.
Jump up ^ "Timeline of Computer History". Computer History Museum. Retrieved November 24, 2015.
^ Jump up to: a b David Kahn, The Codebreakers, 1967, ISBN 0-684-83130-9.
^ Jump up to: a b "Computer Science : Achievements and Challenges circa 2000" (PDF). Archived from the original (PDF) on September 11, 2006. Retrieved January 11, 2007.
Jump up ^ Constable, R. L. (March 2000). "Computer Science: Achievements and Challenges circa 2000" (PDF).
Jump up ^ Abelson, H.; G.J. Sussman with J. Sussman (1996). Structure and Interpretation of Computer Programs (2nd ed.). MIT Press. ISBN 0-262-01153-0. The computer revolution is a revolution in the way we think and in the way we express what we think. The essence of this change is the emergence of what might best be called procedural epistemology – the study of the structure of knowledge from an imperative point of view, as opposed to the more declarative point of view taken by classical mathematical subjects.
Jump up ^ "Black box traders are on the march". The Telegraph. August 26, 2006. Archived from the original on June 21, 2008.
Jump up ^ "The Impact of High Frequency Trading on an Electronic Market". Papers.ssrn.com. doi:10.2139/ssrn.1686004. SSRN 1686004 Freely accessible.
Jump up ^ Maly, Timy. "How Digital Filmmakers Produced a Gorgeous Sci-Fi Movie on a Kickstarter Budget". Wired. Retrieved November 24, 2015.
Jump up ^ Matthau, Charles. "How Tech Has Shaped Film Making: The Film vs. Digital Debate Is Put to Rest". Wired. Retrieved November 24, 2015.
^ Jump up to: a b Louis Fine (1959). "The Role of the University in Computers, Data Processing, and Related Fields". Communications of the ACM. 2 (9): 7–14. doi:10.1145/368424.368427.
Jump up ^ "Stanford University Oral History". Stanford University. Retrieved May 30, 2013.
Jump up ^ Donald Knuth (1972). "George Forsythe and the Development of Computer Science". Comms. ACM. Archived October 20, 2013, at the Wayback Machine.
Jump up ^ Matti Tedre (2006). "The Development of Computer Science: A Sociocultural Perspective" (PDF). p. 260. Retrieved December 12, 2014.
Jump up ^ Peter Naur (1966). "The science of datalogy". Communications of the ACM. 9 (7): 485. doi:10.1145/365719.366510.
Jump up ^ Weiss, E. A.; Corley, Henry P. T. "Communications of the ACM". Communications of the ACM. 1 (4): 6. doi:10.1145/368796.368802.
Jump up ^ Communications of the ACM 2(1):p.4
Jump up ^ IEEE Computer 28(12):p.136
Jump up ^ P. Mounier-Kuhn, L'Informatique en France, de la seconde guerre mondiale au Plan Calcul. L'émergence d'une science, Paris, PUPS, 2010, ch. 3 & 4.
Jump up ^ [1]
Jump up ^ Tedre, M. (2011). "Computing as a Science: A Survey of Competing Viewpoints". Minds and Machines. 21 (3): 361–387. doi:10.1007/s11023-011-9240-4.
Jump up ^ Parnas, D. L. (1998). "Software engineering programmes are not computer science programmes". Annals of Software Engineering. 6: 19–37. doi:10.1023/A:1018949113292., p. 19: "Rather than treat software engineering as a subfield of computer science, I treat it as an element of the set, Civil Engineering, Mechanical Engineering, Chemical Engineering, Electrical Engineering, […]"
Jump up ^ Wegner, P. (October 13–15, 1976). Research paradigms in computer science—Proceedings of the 2nd international Conference on Software Engineering. San Francisco, California, United States: IEEE Computer Society Press, Los Alamitos, CA.
Jump up ^ Denning, P. J.; Comer, D. E.; Gries, D.; Mulder, M. C.; Tucker, A.; Turner, A. J.; Young, P. R. (January 1989). "Computing as a discipline". Communications of the ACM. 32: 9–23. doi:10.1145/63238.63239.
Jump up ^ Eden, A. H. (2007). "Three Paradigms of Computer Science" (PDF). Minds and Machines. 17 (2): 135–167. doi:10.1007/s11023-007-9060-8. Archived from the original (PDF) on February 15, 2016.
^ Jump up to: a b "Computer Science as a Profession". Computing Sciences Accreditation Board. May 28, 1997. Archived from the original on June 17, 2008. Retrieved 23 May 2010.
Jump up ^ Committee on the Fundamentals of Computer Science: Challenges and Opportunities, National Research Council (2004). Computer Science: Reflections on the Field, Reflections from the Field. National Academies Press. ISBN 978-0-309-09301-9.
Jump up ^ "CSAB Leading Computer Education". CSAB. August 3, 2011. Retrieved 19 November 2011.
Jump up ^ Clay Mathematics Institute P = NP Archived October 14, 2013, at the Wayback Machine.
Jump up ^ P. Collins, Graham (October 14, 2002). "Claude E. Shannon: Founder of Information Theory". Scientific American. Retrieved December 12, 2014.
Jump up ^ A. Thisted, Ronald (April 7, 1997). "Computer Architecture" (PDF). The University of Chicago.
Jump up ^ Wescott, Bob (2013). The Every Computer Performance Book, Chapter 3: Useful laws. CreateSpace. ISBN 1482657759.
Jump up ^ "What Is Computation?". buffalo.edu.
Jump up ^ Meyer, Bertrand (April 2009). "Viewpoint: Research evaluation for computer science". Communications of the ACM. 25 (4): 31–34. doi:10.1145/1498765.1498780.
Jump up ^ Patterson, David (August 1999). "Evaluating Computer Scientists and Engineers For Promotion and Tenure". Computing Research Association.
Jump up ^ Fortnow, Lance (August 2009). "Viewpoint: Time for Computer Science to Grow Up". Communications of the ACM. 52 (8): 33–35. doi:10.1145/1536616.1536631.
Jump up ^ "Computer Science: Not Just an Elective Anymore". Education Week. February 25, 2014.
Jump up ^ "Running on Empty" (PDF). October 2010.
Jump up ^ "How to Teach Computational Thinking—Stephen Wolfram Blog". blog.stephenwolfram.com. Retrieved 16 September 2016.
Jump up ^ "A is for algorithm". The Economist. April 26, 2014.
Jump up ^ "Computing at School International comparisons" (PDF). Retrieved July 20, 2015.
Jump up ^ "Adding Coding to the Curriculum". The New York Times. March 23, 2014.
Jump up ^ "IT gender gap: Where are the female programmers?". Retrieved July 20, 2015.
^ Jump up to: a b "IT gender gap: Where are the female programmers?".
Jump up ^ "what gender is science" (PDF). Retrieved July 20, 2015.
